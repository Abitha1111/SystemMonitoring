import org.java_websocket.server.WebSocketServer;
import org.java_websocket.WebSocket;
import org.java_websocket.handshake.ClientHandshake;
import org.json.JSONObject;

import java.net.InetSocketAddress;

public class MyWebSocketServer extends WebSocketServer {

    @Override
    public void onOpen(WebSocket conn, ClientHandshake handshake) {
        System.out.println("New connection: " + conn.getRemoteSocketAddress());
    }

    @Override
    public void onClose(WebSocket conn, int code, String reason, boolean remote) {
        System.out.println("Closed connection: " + conn.getRemoteSocketAddress());
    }

    @Override
    public void onMessage(WebSocket conn, String message) {
        System.out.println("Received: " + message);
        
        // Parse JSON if necessary
        JSONObject json = new JSONObject(message);
        String msg = json.getString("message");
        String status = json.getString("status");
        
        System.out.println("Message: " + msg + ", Status: " + status);

        // Echo back a message or handle it as needed
        conn.send("Message received: " + msg);
    }

    @Override
    public void onError(WebSocket conn, Exception ex) {
        ex.printStackTrace();
    }

    public static void main(String[] args) {
        int port = 4999; // Port on which to listen
        MyWebSocketServer server = new MyWebSocketServer();
        server.start(port);
        System.out.println("WebSocket Server started on port: " + port);
    }
}
